{"version":3,"file":"component---src-pages-portfolio-js.js","mappings":";;;;;;;;AAEA,KAAM,CAAAA,SAAS,CAAG,WAAW,CAC7B,KAAM,CAAAC,SAAS,CAAG,WAAW,CAC7B,KAAM,CAAAC,eAAe,CAAG,yBAAyB,CACjD,KAAM,CAAAC,UAAU,CAAG,wBAAwB,CAC3C,KAAM,CAAAC,UAAU,CAAG,UAAU,CAE7B,KAAM,CAAAC,kBAAkB,CAAG,GAAI,CAAAC,MAAM,CAAC,GAAG,CAAGF,UAAU,CAACG,MAAM,CAAC,CAC9D,KAAM,CAAAC,yBAAyB,CAAG,GAAI,CAAAF,MAAM,CAACF,UAAU,CAACG,MAAM,CAAGJ,UAAU,CAACI,MAAM,CAAE,IAAI,CAAC,CACzF,KAAM,CAAAE,sBAAsB,CAAG,GAAI,CAAAH,MAAM,CAAC,MAAM,CAAGH,UAAU,CAACI,MAAM,CAAE,IAAI,CAAC,CAE3E,KAAM,CAAAG,iBAAiB,CAAGA,CAACC,MAAM,CAAEC,WAAW,CAAEC,WAAW,GAAK,CAC/D,GAAI,CAAAC,eAAe,CAAG,KAAK,CAC3B,GAAI,CAAAC,eAAe,CAAG,KAAK,CAC3B,GAAI,CAAAC,mBAAmB,CAAG,KAAK,CAE/B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,MAAM,CAACO,MAAM,CAAED,CAAC,EAAE,CAAE,CACvC,KAAM,CAAAE,SAAS,CAAGR,MAAM,CAACM,CAAC,CAAC,CAE3B,GAAIH,eAAe,EAAId,SAAS,CAACoB,IAAI,CAACD,SAAS,CAAC,CAAE,CACjDR,MAAM,CAAGA,MAAM,CAACU,KAAK,CAAC,CAAC,CAAEJ,CAAC,CAAC,CAAG,GAAG,CAAGN,MAAM,CAACU,KAAK,CAACJ,CAAC,CAAC,CACnDH,eAAe,CAAG,KAAK,CACvBE,mBAAmB,CAAGD,eAAe,CACrCA,eAAe,CAAG,IAAI,CACtBE,CAAC,EAAE,CACJ,CAAC,IAAM,IAAIF,eAAe,EAAIC,mBAAmB,EAAIf,SAAS,CAACmB,IAAI,CAACD,SAAS,CAAC,CAAE,CAC/ER,MAAM,CAAGA,MAAM,CAACU,KAAK,CAAC,CAAC,CAAEJ,CAAC,CAAG,CAAC,CAAC,CAAG,GAAG,CAAGN,MAAM,CAACU,KAAK,CAACJ,CAAC,CAAG,CAAC,CAAC,CAC3DD,mBAAmB,CAAGD,eAAe,CACrCA,eAAe,CAAG,KAAK,CACvBD,eAAe,CAAG,IAAI,CACvB,CAAC,IAAM,CACNA,eAAe,CAAGF,WAAW,CAACO,SAAS,CAAC,GAAKA,SAAS,EAAIN,WAAW,CAACM,SAAS,CAAC,GAAKA,SAAS,CAC9FH,mBAAmB,CAAGD,eAAe,CACrCA,eAAe,CAAGF,WAAW,CAACM,SAAS,CAAC,GAAKA,SAAS,EAAIP,WAAW,CAACO,SAAS,CAAC,GAAKA,SAAS,CAC/F,CACD,CAEA,MAAO,CAAAR,MAAM,CACd,CAAC,CAED,KAAM,CAAAW,4BAA4B,CAAGA,CAACC,KAAK,CAAEX,WAAW,GAAK,CAC5DV,eAAe,CAACsB,SAAS,CAAG,CAAC,CAE7B,MAAO,CAAAD,KAAK,CAACE,OAAO,CAACvB,eAAe,CAAEwB,EAAE,EAAId,WAAW,CAACc,EAAE,CAAC,CAAC,CAC7D,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAACJ,KAAK,CAAEV,WAAW,GAAK,CAC3CL,yBAAyB,CAACgB,SAAS,CAAG,CAAC,CACvCf,sBAAsB,CAACe,SAAS,CAAG,CAAC,CAEpC,MAAO,CAAAD,KAAK,CAACE,OAAO,CAACjB,yBAAyB,CAAE,CAACoB,CAAC,CAAEC,UAAU,GAAKhB,WAAW,CAACgB,UAAU,CAAC,CAAC,CACzFJ,OAAO,CAAChB,sBAAsB,CAAEqB,CAAC,EAAIjB,WAAW,CAACiB,CAAC,CAAC,CAAC,CACvD,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGA,CAACR,KAAK,CAAES,OAAO,GAAK,CACrC,GAAI,EAAE,MAAO,CAAAT,KAAK,GAAK,QAAQ,EAAIU,KAAK,CAACC,OAAO,CAACX,KAAK,CAAC,CAAC,CAAE,CACzD,KAAM,IAAI,CAAAY,SAAS,CAAC,8CAA8C,CAAC,CACpE,CAEAH,OAAO,CAAG,CACTI,UAAU,CAAE,KAAK,CACjBd,4BAA4B,CAAE,KAAK,CACnC,GAAGU,OACJ,CAAC,CAED,GAAIC,KAAK,CAACC,OAAO,CAACX,KAAK,CAAC,CAAE,CACzBA,KAAK,CAAGA,KAAK,CAACc,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAC9BC,MAAM,CAACF,CAAC,EAAIA,CAAC,CAACpB,MAAM,CAAC,CACrBuB,IAAI,CAAC,GAAG,CAAC,CACZ,CAAC,IAAM,CACNlB,KAAK,CAAGA,KAAK,CAACgB,IAAI,CAAC,CAAC,CACrB,CAEA,GAAIhB,KAAK,CAACL,MAAM,GAAK,CAAC,CAAE,CACvB,MAAO,EAAE,CACV,CAEA,KAAM,CAAAN,WAAW,CAAGoB,OAAO,CAACU,MAAM,GAAK,KAAK,CAC3C/B,MAAM,EAAIA,MAAM,CAACC,WAAW,CAAC,CAAC,CAC9BD,MAAM,EAAIA,MAAM,CAACgC,iBAAiB,CAACX,OAAO,CAACU,MAAM,CAAC,CACnD,KAAM,CAAA7B,WAAW,CAAGmB,OAAO,CAACU,MAAM,GAAK,KAAK,CAC3C/B,MAAM,EAAIA,MAAM,CAACE,WAAW,CAAC,CAAC,CAC9BF,MAAM,EAAIA,MAAM,CAACiC,iBAAiB,CAACZ,OAAO,CAACU,MAAM,CAAC,CAEnD,GAAInB,KAAK,CAACL,MAAM,GAAK,CAAC,CAAE,CACvB,MAAO,CAAAc,OAAO,CAACI,UAAU,CAAGvB,WAAW,CAACU,KAAK,CAAC,CAAGX,WAAW,CAACW,KAAK,CAAC,CACpE,CAEA,KAAM,CAAAsB,YAAY,CAAGtB,KAAK,GAAKX,WAAW,CAACW,KAAK,CAAC,CAEjD,GAAIsB,YAAY,CAAE,CACjBtB,KAAK,CAAGb,iBAAiB,CAACa,KAAK,CAAEX,WAAW,CAAEC,WAAW,CAAC,CAC3D,CAEAU,KAAK,CAAGA,KAAK,CAACE,OAAO,CAACpB,kBAAkB,CAAE,EAAE,CAAC,CAE7C,GAAI2B,OAAO,CAACV,4BAA4B,CAAE,CACzCC,KAAK,CAAGD,4BAA4B,CAACC,KAAK,CAAEX,WAAW,CAAC,CACzD,CAAC,IAAM,CACNW,KAAK,CAAGX,WAAW,CAACW,KAAK,CAAC,CAC3B,CAEA,GAAIS,OAAO,CAACI,UAAU,CAAE,CACvBb,KAAK,CAAGV,WAAW,CAACU,KAAK,CAACuB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAGvB,KAAK,CAACF,KAAK,CAAC,CAAC,CAAC,CACtD,CAEA,MAAO,CAAAM,WAAW,CAACJ,KAAK,CAAEV,WAAW,CAAC,CACvC,CAAC,CAEDkC,MAAM,CAACC,OAAO,CAAGjB,SAAS,CAC1B;AACAgB,yBAAsB,CAAGhB,SAAS;;;;;;;;;;;;;AC7GnB,QAAS,CAAAqB,GAAGA,CAAG,CAAEC,KAAM,CAAC,CAAG,CACtC,KAAM,CAAAC,IAAI,CAAGH,sDAAc,aAQ1B,CAAC,CACF,mBACAD,gDAAA,cAAQG,KAAK,CAAC,KAAG,CAACC,IAAI,CAACE,IAAI,CAACC,YAAY,CAACJ,KAAa,CAAC,CAE3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4WCbA,GAA6B,CAAAK,CAAA,CAAG,iDAAC,IAAM,GAAK,EAAG,EAAE,GACpCC,CAAA,CAAsB,iDAAC,IAAK,KAAM,KAAM,KAAK,GAC7CC,CAAA,CAAmB,iDAC9B,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAE3DC,CAAA,CAAsB,IACtBC,CAAA,CAAsB,IACtBC,CAAA,CAAuB,kDAAI,CAAC,GAmG5BC,CAAA,CAAO,QAAAC,CAACC,CAAA,EAAe,OAAAC,OAAA,CAAmBF,IAAA,CAAKC,CAAA,CAAQ,GAEvDE,CAAA,CAAc,QAAAC,CAACH,CAAA,CAAWI,CAAA,EAAS,MAAc,CAAAJ,CAAA,CAAGI,CAAC,GAE9CxC,CAAA,CAAW,QAAAyC,CAACL,CAAA,CAAeI,CAAA,EACtC,OAAQA,CAAA,EAGN,kBACE,qBAAsBJ,CAAA,CAAK,OAAOA,CAAA,CAAK,YAGzC,IACE,cAAe,CAAAA,CAAA,MAGjB,gBACE,MAEF,gBACE,QAEN,EAEsBM,CAAA,CAAG,QAAAC,CAACP,CAAA,EACxB,OAAAA,CAAA,CAAO7B,GAAA,CAAI,SAAA6B,CAAA,EAAY,OAAAA,CAAA,CAAMQ,GAAA,KAAOR,CAAA,CAAMS,KAAA,CAAK,OAAKlC,IAAA,CAAI,MAAO,GAE3D,QAA4B,CAAAmC,EAACV,CAAA,EACjC,IAAAI,CAAA,CAAYJ,CAAA,CAASW,WAAA,CAAgB,KACrC,IAAa,IAATP,CAAA,CAAY,CACd,GAAM,CAAAQ,CAAA,CAAMZ,CAAA,CAAS7C,KAAA,CAAMiD,CAAA,CAAM,GACjC,GAAkB,SAAdQ,CAAA,CACF,YAEF,GAAmB,IAAfA,CAAA,CAAI5D,MAAA,EAA+B,IAAf4D,CAAA,CAAI5D,MAAA,CAC1B,MAAO,CAAA4D,CAEV,EAEH,SAEoC,CAAAC,EAClCb,CAAA,EAEA,IAAAI,CAAA,CAQIJ,CAAA,CAPFc,MAAA,CAAA/D,CAAA,KACA,KAAAqD,CAAA,eAAAA,CAAA,CAAAW,CAAA,CAMEf,CAAA,CANFS,KAAA,CACAO,CAAA,CAKEhB,CAAA,CALFiB,MAAA,CACAzB,CAAA,CAIEQ,CAAA,CAJFkB,cAAA,CACAzB,CAAA,CAGEO,CAAA,CAHFmB,WAAA,CACAzB,CAAA,CAEEM,CAAA,CAFFoB,WAAA,CAEEzB,CAAA,CAAAK,CAAA,CADFqB,OAAA,CAAAvB,CAAA,KAAO,KAAAH,CAAA,CAAG,CAAgB,eAAAA,CAAA,CAK5B,MAHA,CAAAG,CAAA,CAAUA,CAAA,CAAQ3B,GAAA,CAAI,SAAA6B,CAAA,EAAU,OAAAA,CAAA,CAAOtD,WAAA,EAA4B,IACnEK,CAAA,CAAS6D,CAAA,CAAU7D,CAAA,EAEfgE,CAAA,EAASC,CAAA,CACCM,CAAA,IAAAtB,CAAA,CAAM,CAAAqB,OAAA,CAAAvB,CAAA,CAASgB,MAAA,CAAA/D,CAAA,CAAQqE,WAAA,CAAaL,CAAA,CAAQC,CAAA,IAEtDxB,CAAA,CAAeiB,KAAA,EAASjB,CAAA,CAAeyB,MAAA,GAAWvB,CAAA,GACpDA,CAAA,CAAcF,CAAA,CAAeiB,KAAA,CAAQjB,CAAA,CAAeyB,MAAA,EAG5B,cAAtBlE,CAAA,EACFgE,CAAA,CAAQA,CAAA,EAASvB,CAAA,CAAeiB,KAAA,EAAShB,CAAA,CAAYA,CAAA,CAAYzC,MAAA,CAAS,GAC1EgE,CAAA,CAASA,CAAA,EAAUO,IAAA,CAAKC,KAAA,CAAMT,CAAA,EAASrB,CAAA,EAAeG,CAAA,KAEjDkB,CAAA,GAEDA,CAAA,CADEC,CAAA,EAAUtB,CAAA,CACJsB,CAAA,CAAStB,CAAA,CACRF,CAAA,CAAeiB,KAAA,CAChBjB,CAAA,CAAeiB,KAAA,CACdO,CAAA,CACDO,IAAA,CAAKC,KAAA,CAAMR,CAAA,CAASnB,CAAA,EAEpBD,CAAA,EAIRF,CAAA,GAAgBsB,CAAA,CAClBA,CAAA,CAASO,IAAA,CAAKC,KAAA,CAAMT,CAAA,CAAQrB,CAAA,EAClBA,CAAA,GACVA,CAAA,CAAcqB,CAAA,CAAQC,CAAA,GAG1BM,CAAA,IAAYtB,CAAA,CAAI,CAAES,KAAA,CAAAM,CAAA,CAAOE,MAAA,CAAAD,CAAA,CAAQI,WAAA,CAAA1B,CAAA,CAAaoB,MAAA,CAAA/D,CAAA,CAAQsE,OAAA,CAAAvB,CAAA,GACxD,UAMwC,CAAA2B,EACtCzB,CAAA,CACAI,CAAA,EAAU,IAAAQ,CAAA,CAIV,WAJA,KAAAR,CAAA,GAAAA,CAAA,CAAQ,IAWP,OAPMQ,CAAA,KAFPZ,CAAA,CAAOa,CAAA,CAAqBb,CAAA,GACpB0B,mBAAA,EAA+C1B,CAAA,CAA1B2B,QAAA,CAG3BvB,CAAA,CACAmB,IAAA,CAAKC,KAAA,CAAMpB,CAAA,CAJ0CJ,CAAA,CAAhBoB,WAAA,EAKrCpB,CAAA,CAAKkB,cAAA,CAAeU,MAAA,EAAe,MACnC5B,CAAA,CAAK6B,GAAA,CACL7B,CAAA,CAAKlC,OAAA,OACN,GAPM8C,CAAA,CAOJJ,GACL,UAEiC,CAAAsB,EAC/B9B,CAAA,EAIA,GAyB0E,CAAAI,CAAA,CAxBxEQ,CAAA,EAHFZ,CAAA,CAAOa,CAAA,CAAqBb,CAAA,GAG1B+B,UAAA,CACAhF,CAAA,CAWEiD,CAAA,CAXFkB,cAAA,CACAH,CAAA,CAUEf,CAAA,CAVF0B,mBAAA,CACAV,CAAA,CASEhB,CAAA,CATFc,MAAA,CACApB,CAAA,CAQEM,CAAA,CARF6B,GAAA,CACAlC,CAAA,CAOEK,CAAA,CAPFlC,OAAA,CACA+B,CAAA,CAMEG,CAAA,CANFS,KAAA,CACAP,CAAA,CAKEF,CAAA,CALFiB,MAAA,CACAQ,CAAA,CAIEzB,CAAA,CAJF2B,QAAA,CACAG,CAAA,CAGE9B,CAAA,CAHFgC,QAAA,CAAAC,CAAA,UAAAH,CAAA,CAAW,CAAE/B,IAAA,CAAAD,CAAA,EAAMgC,CAAA,CACnBI,CAAA,CAEElC,CAAA,CAFFmC,eAAA,CACA/D,CAAA,CACE4B,CAAA,CADFoC,cAAA,CASF,GANKxB,CAAA,EACHqB,CAAA,CAASlC,IAAA,6FAKA,CAAAgB,CAAA,CACT,KAAM,IAAS,CAAAsB,KAAA,2CAGZtF,CAAA,GAAoBA,CAAA,CAAe0D,KAAA,EAAU1D,CAAA,CAAekE,MAAA,EAOrDlE,CAAA,CAAe6E,MAAA,GACzB7E,CAAA,CAAe6E,MAAA,CAASlB,CAAA,CAAmBe,CAAA,GAN3C1E,CAAA,CAAiB,CACf0D,KAAA,CAAAZ,CAAA,CACAoB,MAAA,CAAAf,CAAA,CACA0B,MAAA,EAAQ,OAAAxB,CAAA,CAAArD,CAAA,SAAAqD,CAAA,CAAgBwB,MAAA,GAAUlB,CAAA,CAAmBe,CAAA,WAMzD,GAAa,CAAAa,CAAA,CAAG,GAAO,CAAAC,GAAA,CAAcvC,CAAA,CAAKqB,OAAA,GAErB,IAAjBiB,CAAA,CAAQE,IAAA,EAAcF,CAAA,CAAQG,GAAA,CAAG,SAAYH,CAAA,CAAQG,GAAA,QACvDH,CAAA,CAAOI,MAAA,CAAe,QACtBJ,CAAA,CAAOI,MAAA,KACPJ,CAAA,CAAQK,GAAA,CAAI5F,CAAA,CAAe6E,MAAA,GAGzBU,CAAA,CAAQG,GAAA,CAAU,QAAIH,CAAA,CAAQG,GAAA,CAAU,SAC1CR,CAAA,CAASlC,IAAA,CACH,IAAAa,CAAA,qFAGJ0B,CAAA,CAAcI,MAAA,CADS,QAArB3F,CAAA,CAAe6E,MAAA,CACH,MAGf,QAGH,GAAM,CAAAgB,CAAA,UAyF4B5C,CAAA,EAClC,GAGE,CAAAI,CAAA,CAKEJ,CAAA,CALF2B,QAAA,CAKEf,CAAA,CAAAZ,CAAA,CAJFc,MAAA,CAAA/D,CAAA,KACgB,KAAA6D,CAAA,eAAAA,CAAA,CAAAG,CAAA,CAGdf,CAAA,CAHFkB,cAAA,CAAcF,CAAA,CAGZhB,CAAA,CAFFgC,QAAA,CAAAtC,CAAA,KAAW,KAAAsB,CAAA,EAAEjB,IAAA,CAAAD,CAAA,EAEXkB,CAAA,CAAArB,CAAA,CAAAK,CAAA,CADFmB,WAAA,CAAAtB,CAAA,KAAW,KAAAF,CAAA,CAAGF,CAAA,CAAmBE,CAAA,CAKNO,CAAA,CAAG2C,MAAA,CAAOC,OAAA,CADhB,CAAErC,KAAA,CAHrBT,CAAA,CAPFS,KAAA,CAU8BQ,MAAA,CAH5BjB,CAAA,CANFiB,MAAA,GAU6D3C,MAAA,CAC7D,SAAA0B,CAAA,EAAE,GAAG,CAAAI,CAAA,CAAIJ,CAAA,UAAiB,iBAAAI,CAAA,EAAiBA,CAAA,CAAO,CAAC,IAErD,GAAIF,CAAA,CAAwBlD,MAAA,CAC1B,KAAU,KAAAqF,KAAA,oGAC2FnC,CAAA,CAChG/B,GAAA,CAAI,SAAA6B,CAAA,EAAG,MAAO,CAAAA,CAAA,CAACzB,IAAA,CAAU,SACzBA,IAAA,CAAU,OAIjB,MAAsB,UAAlBxB,CAAA,CAmBA,SAQWiD,CAAA,KAPP,CAAAI,CAAA,CAAAJ,CAAA,CAAR2B,QAAA,CACgBf,CAAA,CAAhBZ,CAAA,CAAAkB,cAAA,CACAnE,CAAA,CAAKiD,CAAA,CAALS,KAAA,CACAM,CAAA,CAAMf,CAAA,CAANiB,MAAA,CAAMK,CAAA,CAAAtB,CAAA,CACN6B,GAAA,CAAAb,CAAA,KACA,KAAAM,CAAA,SAAAA,CAAA,CAAA7B,CAAA,CAAAO,CAAA,CAAA+C,oBAAA,CAAArD,CAAA,CAAAM,CAAA,CACAgC,QAAA,CAAArC,CAAA,KAAQ,KAAAD,CAAA,CAAG,CAAEK,IAAA,CAAAD,CAAA,EAEbJ,CAAA,CAAeG,CAAA,CAAGe,CAAA,CAAcH,KAAA,CAAQG,CAAA,CAAcK,MAAA,CAEhDf,CAAA,CAAY8C,CAAA,KALK,KAAAvD,CAAA,CAAAD,CAAA,CAAAC,CAAA,EAQvB,GAAI1C,CAAA,EAASgE,CAAA,CAAQ,CACnB,IAAAnD,CAAA,CAAmBqF,CAAA,CAA4BrC,CAAA,CAAe,CAC5DH,KAAA,CAAA1D,CAAA,CACAkE,MAAA,CAAAF,CAAA,CACAc,GAAA,CAAAb,CAAA,GAEFjE,CAAA,CAAQa,CAAA,CAAW6C,KAAA,CACnBM,CAAA,CAASnD,CAAA,CAAWqD,MAAA,CACpBpB,CAAA,CAAcjC,CAAA,CAAWwD,WAC1B,EAEIrE,CAAA,CAMOgE,CAAA,GACVA,CAAA,CAASQ,IAAA,CAAKC,KAAA,CAAMzE,CAAA,CAAQ8C,CAAA,GAH1B9C,CAAA,CAHGgE,CAAA,CAGKQ,IAAA,CAAKC,KAAA,CAAMT,CAAA,CAASlB,CAAA,EAFpBD,CAAA,CAQZ,GAAmB,CAAAU,CAAA,CAAGvD,CAAA,CAMtB,GAJE6D,CAAA,CAAcH,KAAA,CAAQ1D,CAAA,EAAS6D,CAAA,CAAcK,MAAA,CAAUF,CAAA,CAIjC,CACtB,GAAM,CAAAL,CAAA,CAAiBE,CAAA,CAAcH,KAAA,CAAQ1D,CAAA,CAAK,iBAClD4C,CAAA,CAASI,IAAA,CAAI,mBACDW,CAAA,CAAc,MACE,UAA1BA,CAAA,CAA6B3D,CAAA,CAAQgE,CAAA,EAClB,qBAAAX,CAAA,CAA6C,qCAAAM,CAAA,CAChE,OAAAE,CAAA,CAAcF,CAAA,EACgD,iEAElC,UAA1BA,CAAA,EACF3D,CAAA,CAAQ6D,CAAA,CAAcH,KAAA,CACtBM,CAAA,CAASQ,IAAA,CAAKC,KAAA,CAAMzE,CAAA,CAAQ8C,CAAA,GAG5B9C,CAAA,EADAgE,CAAA,CAASH,CAAA,CAAcK,MAAA,EACNpB,CAEpB,EAOD,MAAO,CACLqD,KAAA,CANYhD,CAAA,CACX5B,MAAA,CAAO,SAAA0B,CAAA,EAAQ,OAAAA,CAAA,EAAQ,CAAC,IACxB7B,GAAA,CAAI,SAAA6B,CAAA,EAAO,OAAAuB,IAAA,CAASC,KAAA,CAAMxB,CAAA,CAAWjD,CAAA,CAAiB,IACtDuB,MAAA,CAAO,SAAA0B,CAAA,QAAY,CAAAA,CAAA,EAAIY,CAAA,CAAcH,KAAK,IAI3CW,WAAA,CAAAvB,CAAA,CACAsD,iBAAA,CAAmB7C,CAAA,CACnB8C,kBAAA,CAAoB7B,IAAA,CAAKC,KAAA,CAAMlB,CAAA,CAAgBT,CAAA,EAC/CwD,aAAA,CAAetG,CAAA,CAEnB,EAzF0B,CAACiD,CAAA,EACR,gBAANjD,CAAA,CACFuG,CAAA,CAAqBtD,CAAA,EACb,cAANjD,CAAA,CACkBuG,CAAA,CAAAhC,CAAA,EAAGH,WAAA,CAAAtB,CAAA,EAAgBG,CAAA,IAE9CN,CAAA,CAASK,IAAA,CAAI,iDACsCK,CAAA,CAAQ,sEAAsErD,CAAA,EAE1H,CACLmG,KAAA,CAAO,CAACnC,CAAA,CAAcN,KAAA,EACtB0C,iBAAA,CAAmBpC,CAAA,CAAcN,KAAA,CACjC2C,kBAAA,CAAoBrC,CAAA,CAAcE,MAAA,CAClCG,WAAA,CAAaL,CAAA,CAAcN,KAAA,CAAQM,CAAA,CAAcE,MAAA,CACjDoC,aAAA,CAAetC,CAAA,CAAcN,KAAA,EAGnC,EAnIqB,CAAyBa,CAAA,IAAAtB,CAAA,CAAM,CAAAkB,cAAA,CAAAnE,CAAA,IAEtCwG,CAAA,CAA+B,CACzCC,OAAA,CAAS,IAGFC,CAAA,CAAGzD,CAAA,CAAKkD,KAAA,CACZO,CAAA,GACHA,CAAA,CAAQ7F,CAAA,CAASgF,CAAA,CAAWO,iBAAA,CAAmBnC,CAAA,GAGjDsB,CAAA,CAAQoB,OAAA,CAAQ,SAAA1D,CAAA,EACd,GAAM,CAAAI,CAAA,CAASwC,CAAA,CAAWM,KAAA,CACvB/E,GAAA,CAAI,SAAAiC,CAAA,EACH,GAAc,CAAArD,CAAA,CAAGgE,CAAA,CACfU,CAAA,CACArB,CAAA,CACAmB,IAAA,CAAKC,KAAA,CAAMpB,CAAA,CAAOwC,CAAA,CAAWxB,WAAA,EAC7BpB,CAAA,CACAN,CAAA,CACAC,CAAA,EAEF,GACW,MAAR5C,CAAA,EAAAA,CAAA,CAAU0D,KAAA,EACV1D,CAAA,CAASkE,MAAA,EACTlE,CAAA,CAASyD,GAAA,EACTzD,CAAA,CAAS6E,MAAA,CAOZ,MAAO,CAAA7E,CAAA,CALLkF,CAAA,CAASlC,IAAA,CACH,IAAAa,CAAA,CAAsC,4BAAAa,CAAA,CAC3C,8BAIL,IACCnD,MAAA,CAAOqF,OAAA,EAEV,GAAU,QAAN3D,CAAA,EAA0B,QAANA,CAAA,WAAoBA,CAAA,CAAmB,CAC7D,GAAM,CAAAjD,CAAA,CACJqD,CAAA,CAAOwD,IAAA,CAAK,SAAA5D,CAAA,EAAO,OAAAA,CAAA,CAAIS,KAAA,GAAUmC,CAAA,CAAWS,aAAa,KAAKjD,CAAA,CAAO,GAEnErD,CAAA,GACFwG,CAAA,CAAOM,QAAA,CAAW,CAChBrD,GAAA,CAAKzD,CAAA,CAASyD,GAAA,CACdsD,MAAA,CAAQxD,CAAA,CAAUF,CAAA,EAClB8C,KAAA,CAAAO,CAAA,EAGL,MAAM,CACL,IAAAnC,CAAA,CAAc,OAAdA,CAAA,CAAAiC,CAAA,CAAOC,OAAA,GAAPlC,CAAA,CAAgByC,IAAA,CAAK,CACnBD,MAAA,CAAQxD,CAAA,CAAUF,CAAA,EAClB8C,KAAA,CAAAO,CAAA,CACAO,IAAA,CAAI,SAAWhE,CAAA,EAElB,EACH,GAEA,GAAM,CAAAtC,CAAA,CAAwC,CAC5CuG,MAAA,CAAQV,CAAA,CACRzC,MAAA,CAAAE,CAAA,CACAmB,eAAA,CAAAD,CAAA,EAOF,OAJI9D,CAAA,GACFV,CAAA,CAAWwG,WAAA,CAAc,CAAEL,QAAA,CAAUzF,CAAA,GAG/B4C,CAAA,EACN,YACEtD,CAAA,CAAW+C,KAAA,CAAQmC,CAAA,CAAWO,iBAAA,CAC9BzF,CAAA,CAAWuD,MAAA,CAAS2B,CAAA,CAAWQ,kBAAA,CAC/B,MAEF,gBACE1F,CAAA,CAAW+C,KAAA,CAAQ,EACnB/C,CAAA,CAAWuD,MAAA,CAAS,EAAI2B,CAAA,CAAWxB,WAAA,CACnC,MAEF,kBACE1D,CAAA,CAAW+C,KAAA,CAAQT,CAAA,CAAKS,KAAA,EAASmC,CAAA,CAAWO,iBAAA,EAAqB,EACjEzF,CAAA,CAAWuD,MAAA,EAAUvD,CAAA,CAAW+C,KAAA,EAAS,GAAKmC,CAAA,CAAWxB,WAAA,EAG7D,MACF,CAAA1D,CAAA,EAEA,GAAM,CAAAsF,CAAA,CAAyB,QAAAmB,CAACnE,CAAA,EAC9B,OAAAjC,KAAA,CAAMqG,IAAA,CAAK,IAAA7B,GAAA,CAAS,IAAM8B,MAAA,CAAArE,CAAA,IAAUsE,IAAA,CAAKpE,CAAA,CAAY,GAsHjD,QAA8B,CAAAoD,EAAAtD,CAAA,EAClB,IAAAI,CAAA,CAAAQ,CAAA,CAAhBZ,CAAA,CAAAkB,cAAA,CACAnE,CAAA,CAAKiD,CAAA,CAALS,KAAA,CACAM,CAAA,CAAMf,CAAA,CAANiB,MAAA,CAAMK,CAAA,CAAAtB,CAAA,CACN6B,GAAA,CAAAb,CAAA,KACA,KAAAM,CAAA,SAAAA,CAAA,CAAA7B,CAAA,CAAAO,CAAA,CAAA+C,oBAAA,CACArD,CAAA,CAAAM,CAAA,CAAAmB,WAAA,CACAvB,CAAA,CAAAI,CAAA,CAAAc,MAAA,CAGejB,CAAA,CAAGe,CAAA,CAAcH,KAAA,CAAQG,CAAA,CAAcK,MAAA,CAEvCnB,CAAA,CAAGkD,CAAA,KAPE,KAAAvD,CAAA,CAAGD,CAAA,CAAuBC,CAAA,EAU9C,GAAI1C,CAAA,EAASgE,CAAA,CAAQ,CACnB,IAAAnD,CAAA,CAAmBqF,CAAA,CAA4BrC,CAAA,CAAe,CAC5DH,KAAA,CAAA1D,CAAA,CACAkE,MAAA,CAAAF,CAAA,CACAc,GAAA,CAAAb,CAAA,GAEFjE,CAAA,CAAQa,CAAA,CAAW6C,KAAA,CACnBM,CAAA,CAASnD,CAAA,CAAWqD,MAAA,CACpBpB,CAAA,CAAcjC,CAAA,CAAWwD,WAC1B,EAGDrE,CAAA,CAAQA,CAAA,EAASwE,IAAA,CAAKgD,GAAA,CAAIxH,CAAA,CAAO6D,CAAA,CAAcH,KAAA,EAC/CM,CAAA,CAASA,CAAA,EAAUQ,IAAA,CAAKgD,GAAA,CAAIxD,CAAA,CAAQH,CAAA,CAAcK,MAAA,EAG7ClE,CAAA,EAAUgE,CAAA,GAEbA,CAAA,EADAhE,CAAA,CAAQwE,IAAA,CAAKgD,GAAA,CAAI5E,CAAA,CAAqBiB,CAAA,CAAcH,KAAA,GACnCZ,CAAA,EAKd9C,CAAA,GACHA,CAAA,CAASgE,CAAA,CAAoBlB,CAAA,EAG/B,GAAmB,CAAAS,CAAA,CAAGvD,CAAA,CA8BtB,OA5BE6D,CAAA,CAAcH,KAAA,CAAQ1D,CAAA,EAAS6D,CAAA,CAAcK,MAAA,CAAUF,CAAA,IAEvDhE,CAAA,CAAQ6D,CAAA,CAAcH,KAAA,CACtBM,CAAA,CAASH,CAAA,CAAcK,MAAA,EAGzBlE,CAAA,CAAQwE,IAAA,CAAKC,KAAA,CAAMzE,CAAA,GAEJ,MAAX2C,CAAA,KAAW,GAAXA,CAAA,CAAa1C,MAAA,EAAS,GACxBoD,CAAA,CAAQV,CAAA,CAAYpB,MAAA,CAAO,SAAA0B,CAAA,EAAI,MAAQ,CAAAA,CAAA,EAAIY,CAAA,CAAcH,KAAK,KAItDzD,MAAA,CAAS0C,CAAA,CAAY1C,MAAA,GAC1BoD,CAAA,CAAMoE,QAAA,CAAS5D,CAAA,CAAcH,KAAA,GAE9BL,CAAA,CAAM2D,IAAA,CAAKnD,CAAA,CAAcH,KAAA,EAI3BL,CAAA,EADAA,CAAA,CAAQN,CAAA,CAAU3B,GAAA,CAAI,SAAA6B,CAAA,EAAW,OAAAuB,IAAA,CAAKC,KAAA,CAAMxB,CAAA,CAAWjD,CAAA,CAAiB,KAC1DuB,MAAA,CAAO,SAAA0B,CAAA,EAAI,OAAAA,CAAA,EAAYY,CAAA,CAAcH,KAAK,oBAItDb,CAAA,EAA6BQ,CAAA,CAAMoE,QAAA,CAASzH,CAAA,GAC9CqD,CAAA,CAAM2D,IAAA,CAAKhH,CAAA,EAGN,CACLmG,KAAA,CAFF9C,CAAA,CAAQA,CAAA,CAAMkE,IAAA,CAAKpE,CAAA,EAGjBkB,WAAA,CAAAvB,CAAA,CACAsD,iBAAA,CAAmB7C,CAAA,CACnB8C,kBAAA,CAAoB7B,IAAA,CAAKC,KAAA,CAAMlB,CAAA,CAAgBT,CAAA,EAC/CwD,aAAA,CAAetG,CAAA,CAEnB,EAEgB,QAA2B,CAAAkG,EACzCjD,CAAA,CACAI,CAAA,EAGA,GAAM,CAAAQ,CAAA,CAAmBZ,CAAA,CAAWS,KAAA,CAAQT,CAAA,CAAWiB,MAAA,CAEnDlE,CAAA,CAAQqD,CAAA,CAAQK,KAAA,CAChBM,CAAA,CAASX,CAAA,CAAQa,MAAA,CAErB,OAAQb,CAAA,CAAQyB,GAAA,EACd,WACE9E,CAAA,CAAQqD,CAAA,CAAQK,KAAA,CAAQL,CAAA,CAAQK,KAAA,CAAQT,CAAA,CAAWS,KAAA,CACnDM,CAAA,CAASX,CAAA,CAAQa,MAAA,CAASb,CAAA,CAAQa,MAAA,CAASjB,CAAA,CAAWiB,MAAA,CACtD,MAEF,aACE,GAAM,CAAAK,CAAA,CAAclB,CAAA,CAAQK,KAAA,CACxBL,CAAA,CAAQK,KAAA,CACRgE,MAAA,CAAOC,gBAAA,CACL1D,CAAA,CAAeZ,CAAA,CAAQa,MAAA,CACzBb,CAAA,CAAQa,MAAA,CACRwD,MAAA,CAAOC,gBAAA,CAEX3H,CAAA,CAAQwE,IAAA,CAAKgD,GAAA,CAAIjD,CAAA,CAAaC,IAAA,CAAKC,KAAA,CAAMR,CAAA,CAAeJ,CAAA,GACxDG,CAAA,CAASQ,IAAA,CAAKgD,GAAA,CACZvD,CAAA,CACAO,IAAA,CAAKC,KAAA,CAAMF,CAAA,CAAcV,CAAA,GAE3B,MAEF,cACE,GAAiB,CAAApB,CAAA,CAAGY,CAAA,CAAQK,KAAA,CAAQL,CAAA,CAAQK,KAAA,CAAQ,EAC9ChB,CAAA,CAAeW,CAAA,CAAQa,MAAA,CAASb,CAAA,CAAQa,MAAA,CAAS,EAEvDlE,CAAA,CAAQwE,IAAA,CAAKoD,GAAA,CAAInF,CAAA,CAAa+B,IAAA,CAAKC,KAAA,CAAM/B,CAAA,CAAemB,CAAA,GACxDG,CAAA,CAASQ,IAAA,CAAKoD,GAAA,CACZlF,CAAA,CACA8B,IAAA,CAAKC,KAAA,CAAMhC,CAAA,CAAcoB,CAAA,GAE3B,MAGF,QACMR,CAAA,CAAQK,KAAA,GAAUL,CAAA,CAAQa,MAAA,GAC5BlE,CAAA,CAAQqD,CAAA,CAAQK,KAAA,CAChBM,CAAA,CAASQ,IAAA,CAAKC,KAAA,CAAMpB,CAAA,CAAQK,KAAA,CAAQG,CAAA,GAGlCR,CAAA,CAAQa,MAAA,GAAWb,CAAA,CAAQK,KAAA,GAC7B1D,CAAA,CAAQwE,IAAA,CAAKC,KAAA,CAAMpB,CAAA,CAAQa,MAAA,CAASL,CAAA,EACpCG,CAAA,CAASX,CAAA,CAAQa,MAAA,GAKvB,MAAO,CACLR,KAAA,CAAA1D,CAAA,CACAkE,MAAA,CAAAF,CAAA,CACAK,WAAA,CAAarE,CAAA,CAAQgE,CAAA,CAEzB,MAAAkB,CAAA,wJAAAC,CAAA,4EC7lBgB,SAAA9D,EAAA,EACd,MAA4B,OAAoBwG,IAClD,EAYA,GAuBa,CAAAtC,CAAA,CAAW,QAAAuC,CACtB7E,CAAA,EAGA,IAAAI,CAAA,OA3BwB,UAExBJ,CAAA,EAGA,IAAAI,CAAA,CAAAQ,CAAA,QAAA+C,OAAA,CAAQ,MAAA3D,CAAA,SAAAI,CAAA,CAAAJ,CAAA,CAAMiE,MAAA,GAAgB,OAAtBrD,CAAA,CAAAR,CAAA,CAAcyD,QAAA,MAAd,GAAAjD,CAAA,CAAwBJ,GAAA,CAAI,EAsBhC,CAAkBR,CAAA,EACbA,CAAA,CArBqB,SAE9BA,CAAA,EACsC,OAAA2D,OAAA,CAAQ,MAAA3D,CAAA,QAAAA,CAAA,CAAM8E,eAAA,CAAgB,EAqBhE,CAAwB9E,CAAA,EACnBA,CAAA,CAAK8E,eAAA,CApBY,SAE1B9E,CAAA,EAAiC,MACQ,CAAA2D,OAAA,CAAK,MAAJ3D,CAAA,KAAI,GAAJA,CAAA,CAAM+E,WAAA,CAAY,EAoBxD,CAAoB/E,CAAA,EACXA,CAAA,CAAC+E,WAAA,CAEP,MAAA/E,CAAA,SAAAI,CAAA,CAAAJ,CAAA,CAAMgF,eAAA,MAAN,GAAA5E,CAAA,CAAuB0E,eAChC,GAEalC,CAAA,CAAS,QAAAqC,CAACjF,CAAA,EAAmB,IAAAI,CAAA,CAAAQ,CAAA,CAAA7D,CAAA,OACxC,QADwCqD,CAAA,CACxCkC,CAAA,CAAStC,CAAA,IAAa,OAAtBY,CAAA,CAAAR,CAAA,CAAgB6D,MAAA,GAAhB,OAAsBlH,CAAA,CAAtB6D,CAAA,CAAwBiD,QAAA,MAAxB,GAAA9G,CAAA,CAAkCyD,GAAG,GAEjB+C,CAAA,CAAG,QAAAhD,CAACP,CAAA,EACxB,IAAAI,CAAA,CAAAQ,CAAA,CAAA7D,CAAA,OAAc,QAAdqD,CAAA,CAAAkC,CAAA,CAAStC,CAAA,IAAT,OAAcY,CAAA,CAAdR,CAAA,CAAgB6D,MAAA,GAAhB,OAAAlH,CAAA,CAAA6D,CAAA,CAAwBiD,QAAA,MAAV,GAAd9G,CAAA,CAAkC+G,MAAM,GA4F1B,QAAY,CAAAL,EAAAzD,CAAA,EAC1B,IAAAI,CAAA,CAAAQ,CAAA,CAAAZ,CAAA,CAAAkF,OAAA,CACAnI,CAAA,CAAAiD,CAAA,CAAAmF,UAAA,CACApE,CAAA,CAAAf,CAAA,CAAAoF,WAAA,CACA5F,CAAA,CAAAQ,CAAA,CAAAqF,YAAA,CACA5F,CAAA,CAAAO,CAAA,CAAA+B,UAAA,CAAApC,CAAA,KACA,KAAAF,CAAA,gBAAAA,CAAA,CAAAG,CAAA,CAAAI,CAAA,CAAAqB,OAAA,CAAAxB,CAAA,UAAAD,CAAA,CAAU,CAAQ,QAAAA,CAAA,CAClBE,CAAA,CAAWE,CAAA,CAAXmB,WAAA,CACAjB,CAAA,CAAOF,CAAA,CAAPlC,OAAA,CACGF,CAAA,CAAKoD,CAAA,CAAAhB,CAAA,CAAAiC,CAAA,EAqCR,MAlCc,QAAZ7B,CAAA,CAACN,CAAA,GAAAM,CAAA,CAAapD,MAAA,EACe,cAA5BY,CAAA,CAAMkD,MAAA,EAAkD,eAAvBlD,CAAA,CAAMkD,MAAA,GAExChB,CAAA,CAAcJ,CAAA,EA+BToC,CAAA,CARFR,CAAA,IAAA1D,CAAA,CACH,CAAAmE,UAAA,CAAApC,CAAA,CACA+B,mBAAA,CAvB0B,QAAAA,CAC1B1B,CAAA,CACAI,CAAA,CACAQ,CAAA,CACAG,CAAA,EAEA,MAAO,CACLN,KAAA,CAAAL,CAAA,CACAa,MAAA,CAAAL,CAAA,CACAgB,MAAA,CAAAb,CAAA,CACAP,GAAA,CAAKzD,CAAA,CAAW,CAAEmI,OAAA,CAAAlF,CAAA,CAASS,KAAA,CAAAL,CAAA,CAAOa,MAAA,CAAAL,CAAA,CAAQ9C,OAAA,CAAAoC,CAAA,CAAS0B,MAAA,CAAAb,CAAA,GAEvD,GAYEY,QAAA,CAAUf,CAAA,CACVS,OAAA,CAAAxB,CAAA,CACAsB,WAAA,CAAArB,CAAA,CACAoB,cAAA,CAb+D,CAC/DT,KAAA,CAAOM,CAAA,CACPE,MAAA,CAAQzB,CAAA,CACRoC,MAAA,CAAM,UAaV,EA8HgB,SAAAlE,EACdsC,CAAA,CACAI,CAAA,EAAqC,IAAAQ,CAAA,CAsDX7D,CAAA,CAAAgE,CAAA,CApDlBvB,CAAA,CAAkCQ,CAAA,CAAlCiE,MAAA,CAAQxE,CAAA,CAA0BO,CAAA,CAA1BkE,WAAA,CACJxE,CAAA,CAAA4B,CAAA,IAD8BN,CAAA,CAAAhB,CAAA,CAC1CkC,CAAA,EACU,CACR+B,MAAA,CAAM3C,CAAA,IACD9B,CAAA,CAAM,CACTgE,OAAA,CAAS,KAEXU,WAAA,CAAazE,CAAA,EACR6B,CAAA,IAAA7B,CAAA,CACH,CAAA+D,OAAA,CAAS,OA8Cb,MA1CA,CAAApD,CAAA,CAAYsD,OAAA,CAAQ,SAAqBtD,CAAA,MAAAQ,CAAA,CAAb7D,CAAA,CAAAqD,CAAA,CAALkF,KAAA,CAAOvE,CAAA,CAAKX,CAAA,CAALmF,KAAA,CACvBxI,CAAA,EAUHgE,CAAA,CAAMD,MAAA,GAAWd,CAAA,CAAac,MAAA,EACV,gBAApB0E,YAAY,EAEZvF,CAGD,EAEDW,CAAA,CAAAlB,CAAA,CAAOuE,MAAA,CAAOT,OAAA,EAAQO,IAAA,CACjB4B,KAAA,CAAA/E,CAAA,CAAAG,CAAA,CAAMkD,MAAA,CAAOT,OAAA,CAAQrF,GAAA,CAAI,SAAA6B,CAAA,EAC1B,OAAAsB,CAAA,IAAYtB,CAAA,CAAM,CAAEsF,KAAA,CAAAvI,CAAA,EACtB,IACAsH,MAAA,GACEiB,KAAA,CAAAvI,CAAA,CACA+G,MAAA,CAAQ/C,CAAA,CAAMkD,MAAA,CAAOJ,QAAA,CAASC,MAAA,KAI7BpE,CAAA,CAAOwE,WAAA,EAIZxE,CAAA,CAAOwE,WAAA,CAAYV,OAAA,CAAQO,IAAA,CAAK,CAC9BuB,KAAA,CAAAvI,CAAA,CACA+G,MAAA,CAAQ/C,CAAA,CAAMmD,WAAA,CAAYL,QAAA,IAjCF,MAAR,EACd5D,CAkCN,KACAW,CAAA,CAAAlB,CAAA,CAAOuE,MAAA,CAAOT,OAAA,EAAQO,IAAA,CAAQ4B,KAAA,CAAA/E,CAAA,CAAApB,CAAA,CAAOgE,OAAA,EACjC,MAAA/D,CAAA,EAAAA,CAAA,CAAa+D,OAAA,GACf,OAAAzG,CAAA,CAAA2C,CAAA,CAAOwE,WAAA,IAAPnD,CAAA,CAAAhE,CAAA,CAAoByG,OAAA,EAAQO,IAAA,CAAI4B,KAAA,CAAA5E,CAAA,CAAItB,CAAA,CAAY+D,OAAA,GAGpD9D,CAAA,KCnZA,CAAAkG,CAAA,CAAAC,CAAA,+CAAAC,CAAA,qCAAAC,CAAA,CCmC6C,QAAAC,CAO5C5F,CAAA,MAAAQ,CAAA,CANCR,CAAA,CAAAI,GAAA,CACAzD,CAAA,CAAAqD,CAAA,CAAA0D,MAAA,CACA/C,CAAA,CAAOX,CAAA,CAAP6F,OAAA,CACAzG,CAAA,CAAAY,CAAA,CAAA8F,GAAA,CAAAzG,CAAA,KAAG,KAAAD,CAAA,IAAAA,CAAA,CACHE,CAAA,CAAUU,CAAA,CAAV+F,UAAA,CACGxG,CAAA,CAEHqB,CAAA,CAAAZ,CAAA,CAAAyF,CAAA,qBACE7F,uFAAA,OACMsB,CAAA,IAAA3B,CAAA,CACJ,CAAAyG,QAAA,CAAS,QACTH,OAAA,CAASlF,CAAA,CACTP,GAAA,CAAKd,CAAA,CAAakB,CAAA,KAAM,GAAS,WACtBlB,CAAA,KAAmB,GAANkB,CAAA,CACxBkD,MAAA,CAAQpE,CAAA,CAAa3C,CAAA,KAAS,GACjB,cAAC2C,CAAA,KAAsB,GAAT3C,CAAA,CAC3BmJ,GAAA,CAAKzG,CAAA,GAGX,GAEoB4G,CAAA,CAA2B,QAAAC,CAK9ClG,CAAA,MAAAQ,CAAA,CAJCR,CAAA,CAAAyD,QAAA,CAAA9G,CAAA,CAAAqD,CAAA,CACAoD,OAAA,CAAAzC,CAAA,KAAU,KAAAhE,CAAA,IACVA,CAAA,CAAAyC,CAAA,CAAAY,CAAA,CAAA+F,UAAA,CAAA1G,CAAA,UAAAD,CAAA,EAAiBA,CAAA,CACdE,CAAA,CAEHsB,CAAA,CAAAZ,CAAA,CAAA0F,CAAA,EAAAnG,CAAA,CAAcD,CAAA,CAAMwD,KAAA,SAAStC,CAAA,QAAAA,CAAA,CAAUsC,KAAA,EAAAtD,CAAA,cAErCI,uFAAA,CAAC+F,CAAA,CAAAzE,CAAA,IAAU5B,CAAA,CAAWkB,CAAA,CAAQ,CAAEsC,KAAA,CAAOvD,CAAA,CAAOwG,UAAA,CAAY1G,CAAA,IAG5D,MAAK,CAAAsB,CAAA,CAAQ/D,MAAA,cAKXgD,uFAAA,gBACGe,CAAA,CAAQ5C,GAAA,CAAI,SAAAiC,CAAA,KAAQ,CAAAQ,CAAA,CAAAR,CAAA,CAALkF,KAAA,CAAOvI,CAAA,CAAAqD,CAAA,CAAA0D,MAAA,CAAQ/C,CAAA,CAAAX,CAAA,CAAA4D,IAAA,CAC7B,mBAAAhE,uFAAA,WACEuG,GAAA,CAAQ3F,CAAA,KAASG,CAAA,CAAI,IAAIhE,CAAA,CACzBiH,IAAA,CAAMjD,CAAA,CACNuE,KAAA,CAAO1E,CAAA,CACPkD,MAAA,CAAQrE,CAAA,CAAa1C,CAAA,KAAS,GACjB,cAAC0C,CAAA,KAAsB,GAAT1C,CAAA,CAC3BmG,KAAA,CAAOvD,CAAA,EACP,IAEHC,CAAA,EAfIA,CAkBX,GAEAmG,CAAA,CAAMS,SAAA,CAAY,CAChBhG,GAAA,CAAKzD,iBAAU,CAAO0J,UAAA,CACtBP,GAAA,CAAKnJ,iBAAU,CAAO0J,UAAA,CACtBvD,KAAA,CAAOnG,iBAAU,CACjB+G,MAAA,CAAQ/G,iBAAU,CAClBoJ,UAAA,CAAYpJ,eAAU,EAGxBsJ,CAAA,CAAQM,WAAA,CAAW,UACnBN,CAAA,CAAQG,SAAA,CAAY,CAClBN,GAAA,CAAKnJ,iBAAU,CAAO0J,UAAA,CACtBN,UAAA,CAAYpJ,eAAU,CACtB8G,QAAA,CAAU9G,gBAAU,CAAM,CACxByD,GAAA,CAAKzD,iBAAU,CAAO0J,UAAA,CACtB3C,MAAA,CAAQ/G,iBAAU,CAClBmG,KAAA,CAAOnG,iBAAU,GAEnByG,OAAA,CAASzG,kBAAU,CACjBA,oBAAU,CAAU,CAClBA,gBAAU,CAAM,CACduI,KAAA,CAAOvI,iBAAU,CAAO0J,UAAA,CACxBzC,IAAA,CAAMjH,iBAAU,CAChBmG,KAAA,CAAOnG,iBAAU,CACjB+G,MAAA,CAAQ/G,iBAAU,CAAO0J,UAAA,GAE3B1J,gBAAU,CAAM,CACduI,KAAA,CAAOvI,iBAAU,CACjBiH,IAAA,CAAMjH,iBAAU,CAAO0J,UAAA,CACvBvD,KAAA,CAAOnG,iBAAU,CACjB+G,MAAA,CAAQ/G,iBAAU,CAAO0J,UAAA,ODtHjC,IAAAM,CAAA,cASaC,CAAA,CACX,QAAAC,CAAoB7G,CAAA,EAAG,IAAAQ,CAAA,CAAAR,CAAA,CAAAyD,QAAA,CAAa9G,CAAA,CAAAiE,CAAA,CAAAZ,CAAA,CAAA2G,CAAA,EAClC,MAAI,CAAAnG,CAAA,cAEAZ,uFAAC,CAAAqG,CAAA,CACK/E,CAAA,IAAAvE,CAAA,CACJ,CAAA8G,QAAA,CAAU,CACRrD,GAAA,CAAKI,CAAA,EACN,iBAEDsF,GAAA,CAAI,mBAIDlG,uFAAA,OAAAsB,CAAA,IAASvE,CAAA,EAEpB,GAEFiK,CAAA,CAAYL,WAAA,CAA2B,cACvCK,CAAA,CAAYR,SAAA,CAAY,CACtB3C,QAAA,CAAU9G,iBAAU,CACpByG,OAAA,QAASoC,CAAA,CAAAS,CAAA,CAAQG,SAAA,SAARZ,CAAA,CAAmBpC,OAAA,CAC5B0C,GAAA,CAAK,QAAAA,CAAUlG,CAAA,CAAOI,CAAA,CAAUQ,CAAA,EAC9B,MAAK,CAAAZ,CAAA,CAAMI,CAAA,EAIJ,GAAS,CAAAiC,KAAA,kBACIjC,CAAA,CAAQ,kBAAoBQ,CAAA,CAAa,yBAH5D,IAKH,IElCW,IAAAsG,CAAA,CAAoC,QAAAC,CAAmB/G,CAAA,EAClE,mBACEJ,uFAAA,CAAAA,oFAAA,mBACEA,uFAAC,CAAAqG,CAAA,CAAY/E,CAAA,IAAAlB,CAAA,gBACbJ,uFAAA,8BACEA,uFAAC,CAAAqG,CAAA,CAAO/E,CAAA,IAAKlB,CAAA,CAAO,CAAA+F,UAAA,EAAY,MAIxC,GAEAe,CAAA,CAAUP,WAAA,CAAyB,YACnCO,CAAA,CAAUV,SAAA,CAAYH,CAAA,CAAQG,SAAA,KAAAa,CAAA,cCPLC,CAAA,CAAsB,QAAAC,CAAA,EAC7C,mBAAAvH,uFACE,WAAAgE,IAAA,CAAK,SACLwD,uBAAA,CAAyB,CACvBC,MAAA,CA6BD,smBACD,GAsBOC,CAAA,CAA2C,QAAAC,CAIrDvH,CAAA,KAHO,CAAAQ,CAAA,CAAAR,CAAA,CAANU,MAAA,CACA/D,CAAA,CAAKqD,CAAA,CAALK,KAAA,CACAM,CAAA,CAAMX,CAAA,CAANa,MAAA,CAEA,MAA0B,cAAtBL,CAAA,cAEiBZ,uFAAA,yBAAA4H,KAAA,CAAO,CAAEC,UAAA,CAAgB9G,CAAA,CAAShE,CAAA,CAAS,IAAQ,OAI9D,gBAAN6D,CAAA,cAEAZ,uFAAA,QAAK4H,KAAA,CAAO,CAAEE,QAAA,CAAU/K,CAAA,CAAOgL,OAAA,CAAkB,uBAC/C/H,uFAAA,QACEkG,GAAA,CAAI,GACJ8B,IAAA,CAAK,eACO,qBACZxH,GAAA,CAA0D,qDAAAO,CAAA,CAAoB,cAAAhE,CAAA,CAA0E,sEACxJ6K,KAAA,CAAO,CACLE,QAAA,CAAgB,OAChBC,OAAA,CAAgB,QAChBE,QAAA,CAAQ,aAQpB,OAEaC,CAAA,CAET,QAAAC,CAAsBvH,CAAA,EAAG,IAAA7D,CAAA,CAAA6D,CAAA,CAAAwH,QAAA,CAAarH,CAAA,CACxCC,CAAA,CAAAJ,CAAA,CAAAyG,CAAA,qBAAArH,uFAAA,CACGI,yEAAA,CAAQ,kBACPJ,uFAAC,CAAA0H,CAAA,CAAKpG,CAAA,IAAKP,CAAA,GACVhE,CAAA,cAESiD,uFAAA,CAACsH,CAAA,CAAmB,MAGpC,GAAAe,CAAA,+HAAAC,CAAA,uBCpGoBC,CAAA,CAAG,QAAAC,CAACxI,CAAA,QAA2B,CAAAA,CAAA,CAACzC,OAAA,CAAQ,MAAK,GAAK,GAE9CkL,CAAA,CACtB,QAAAC,CAAAtI,CAAA,EACE,IAAAQ,CAAA,CAAAR,CAAA,CAAAuI,EAAA,CAAA5L,CAAA,KACA,KAAA6D,CAAA,OAAAA,CAAA,CAAAG,CAAA,CAAAX,CAAA,CAAAwI,SAAA,CACOpJ,CAAA,CAAWY,CAAA,CAAAyI,KAAA,CAClBpJ,CAAA,CAAKW,CAAA,CAALwH,KAAA,CACAlI,CAAA,CAAAU,CAAA,CAAAmF,KAAA,CACA5F,CAAA,CAAAS,CAAA,CAAA6F,OAAA,CAAArG,CAAA,KAAO,KAAAD,CAAA,QAAAA,CAAA,CACPE,CAAA,CAAYO,CAAA,CAAZ0I,YAAA,CACAhJ,CAAA,CAAAM,CAAA,CAAA2I,QAAA,CACA7I,CAAA,CAAAE,CAAA,CAAA+B,eAAA,CACAvE,CAAA,CAASwC,CAAA,CAAT4I,SAAA,CACA1I,CAAA,CAAcF,CAAA,CAAd6I,cAAA,CACGvI,CAAA,CAEHM,CAAA,CAAAZ,CAAA,CAAAiI,CAAA,MAAK3I,CAAA,CAEH,MADA,CAAAO,OAAA,CAAQF,IAAA,CAAI,iDAIVP,CAAA,GACFuB,CAAA,CAAYvB,CAAA,EAGdM,CAAA,CAAQwB,CAAA,EACN0H,SAAA,CAAApL,CAAA,CACAqL,cAAA,CAAA3I,CAAA,CACA6B,eAAA,CAAAjC,CAAA,EACGJ,CAAA,EAGL,IAAAe,CAAA,CAOInB,CAAA,CANFe,KAAA,CACAgB,CAAA,CAKE/B,CAAA,CALFuB,MAAA,CACAa,CAAA,CAIEpC,CAAA,CAJFoB,MAAA,CACAkC,CAAA,CAGEtD,CAAA,CAHFuE,MAAA,CACAX,CAAA,CAEE5D,CAAA,CAFFwE,WAAA,CACiBjB,CAAA,CACfvD,CAAA,CADFyC,eAAA,CAAAF,CAAA,ULiCJjC,CAAA,CACAI,CAAA,CACAQ,CAAA,EAIA,GAAkB,CAAA7D,CAAA,CAAkB,GAEvBgE,CAAA,wBAmBb,MAhBK,CAAA3C,CAAA,KACHrB,CAAA,CAAakL,QAAA,CAAqB,WAClClL,CAAA,CAAamM,QAAA,CAAQ,UAGb,UAANtI,CAAA,EACF7D,CAAA,CAAa0D,KAAA,CAAQT,CAAA,CACrBjD,CAAA,CAAakE,MAAA,CAASb,CAAA,EACP,gBAANQ,CAAA,GACJxC,CAAA,KACHrB,CAAA,CAAagL,OAAA,CAAwB,eACrChL,CAAA,CAAaoM,aAAA,CAAa,OAE5BpI,CAAA,CACD,yDAEM,CACL6H,SAAA,CAAA7H,CAAA,CACA,4BAA2B,GAC3B6G,KAAA,CAAO7K,CAAA,CAEX,EK1DQ,CAAgB8D,CAAA,CAAOY,CAAA,CAAQK,CAAA,EAH1BI,CAAA,CAAMD,CAAA,CAAb2F,KAAA,CACWtF,CAAA,CAAXL,CAAA,CAAA2G,SAAA,CACGhG,CAAA,CAGL5B,CAAA,CAAAiB,CAAA,CAAAqG,CAAA,EAAA/E,CAAA,CAAkD,CAChDM,QAAA,KAAU,GACVL,OAAA,CAAS,IAoBX,MAlBI,CAAAR,CAAA,CAAOa,QAAA,GACTN,CAAA,CAAcM,QAAA,CACTvC,CAAA,IAAA0B,CAAA,CAAOa,QAAA,CACV,CAAAC,MAAA,CAAQd,CAAA,CAAOa,QAAA,CAASC,MAAA,CACpByE,CAAA,CAAevF,CAAA,CAAOa,QAAA,CAASC,MAAA,MAC/B,MAIJd,CAAA,CAAOQ,OAAA,GACTD,CAAA,CAAcC,OAAA,CAAUR,CAAA,CAAOQ,OAAA,CAAQrF,GAAA,CAAI,SAAA6B,CAAA,EACzC,OAAAsB,CAAA,IACKtB,CAAA,CAAM,CACT8D,MAAA,CAAQyE,CAAA,CAAevI,CAAA,CAAO8D,MAAA,GAElC,kBAGU9D,uFAAC,CACXjD,CAAA,CAEKuE,CAAA,IAAAsB,CAAA,CACH,CAAAgF,KAAA,CACKtG,CAAA,IAAAY,CAAA,CACAzC,CAAA,CAAK,CACR0C,eAAA,CAAAjC,CAAA,GAEF0I,SAAA,CAActG,CAAA,EAASvB,CAAA,CAAS,IAAOA,CAAA,CAAgB,mBAEzDf,uFAAC,CAAAkI,CAAA,CAAc,CAAApH,MAAA,CAAQgB,CAAA,CAAQrB,KAAA,CAAOI,CAAA,CAAOI,MAAA,CAAQQ,CAAA,eACnDzB,uFAAC,CAAAgH,CAAA,CAAW1F,CAAA,ILyKJ,SACdtB,CAAA,CACAI,CAAA,CACAQ,CAAA,CACA7D,CAAA,CACAgE,CAAA,CACAC,CAAA,CACAxB,CAAA,CACAC,CAAA,EAEA,GAAkB,CAAAC,CAAA,CAAkB,CAAE,EAElCsB,CAAA,GACFtB,CAAA,CAAayC,eAAA,CAAkBnB,CAAA,CAErB,UAANJ,CAAA,EACFlB,CAAA,CAAae,KAAA,CAAQ1D,CAAA,CACrB2C,CAAA,CAAauB,MAAA,CAASF,CAAA,CACtBrB,CAAA,CAAayC,eAAA,CAAkBnB,CAAA,CAC/BtB,CAAA,CAAauI,QAAA,CAAQ,aACY,gBAAxBrH,CAAA,EAMsB,cAAtBA,CAAA,IALTlB,CAAA,CAAauI,QAAA,CAAqB,WAClCvI,CAAA,CAAa0J,GAAA,CAAM,EACnB1J,CAAA,CAAa2J,IAAA,CAAO,EACpB3J,CAAA,CAAa4J,MAAA,CAAS,EACtB5J,CAAA,CAAa6J,KAAA,CAAQ,IAUrB/J,CAAA,GACFE,CAAA,CAAasJ,SAAA,CAAYxJ,CAAA,EAGvBC,CAAA,GACFC,CAAA,CAAauJ,cAAA,CAAiBxJ,CAAA,EAEhC,GAAY,CAAAE,CAAA,CAAA2B,CAAA,IACPtB,CAAA,CAAW,CACd,eAAe,EACf,yBAAwB,GACxB4H,KAAA,CACEtG,CAAA,EAAAkI,OAAA,CAAwB,EACxBC,UAAA,CAAkC,wBAC/B/J,CAAA,IAeP,MAVK,CAAAtB,CAAA,KACHuB,CAAA,CAAOiI,KAAA,CAAQ,CACb3G,MAAA,CAAc,OACdoI,IAAA,CAAM,EACNpB,QAAA,CAAQ,WACRmB,GAAA,CAAK,EACL3I,KAAA,CAAK,SAIFd,CACT,EKzOc,CACF2D,CAAA,CACA,EACAxB,CAAA,CACAjB,CAAA,CACAY,CAAA,CACAwB,CAAA,CACArF,CAAA,CACA0C,CAAA,iBAIJN,uFAAC,CAAAkH,CAAA,CACuB5F,CAAA,6BACtBsH,SAAA,CAAW/I,CAAA,EACNa,CAAA,CLgHC,SACdV,CAAA,CACAI,CAAA,CACAQ,CAAA,CACA7D,CAAA,CACAgE,CAAA,EA4BA,WA5BA,KAAAA,CAAA,GAAAA,CAAA,CAAuB,IAGlB3C,CAAA,KACH2C,CAAA,CAAKO,CAAA,EACHL,MAAA,CAAM,OACNoI,IAAA,CAAM,EACNpB,QAAA,CAAoB,WACpBmB,GAAA,CAAK,EACLM,SAAA,CAA0B,gBAC1BD,UAAA,CAAU,uBACVhJ,KAAA,CAAa,OACbkJ,UAAA,CAAU,WACP5I,CAAA,GAKFO,CAAA,IAAAV,CAAA,CACH,CAAAqF,OAAA,CAAAlJ,CAAA,CACAoJ,UAAA,CAAYnG,CAAA,CACZ,kBAAqB,GACrB4H,KAAA,CAAKtG,CAAA,IACAP,CAAA,CAAK,CACRyI,OAAA,CAAwB,KAK9B,EK7Ic,CACiB,UAAnB5J,CAAA,CACA,EACA2D,CAAA,CACA3D,CAAA,CACAE,CAAA,KAKV,GC1HF8J,CAAA,oPAkEiBC,CAAA,CA5CX,SACJzJ,CAAA,EAEA,MAAgB,UAuBfQ,CAAA,EAtBC,IAAA7D,CAAA,CAAA6D,CAAA,CAAAJ,GAAA,CACaO,CAAA,CAAAH,CAAA,CAAbkJ,WAAA,CACAtK,CAAA,CAAOoB,CAAA,CAAPmJ,OAAA,CAmBGtK,CAAA,CAEHuB,CAAA,CAAAJ,CAAA,CAAAgJ,CAAA,EAIA,MAJI,CAAApK,CAAA,EACFS,OAAA,CAAQF,IAAA,CAAKP,CAAA,EAGXuB,CAAA,cAAAf,uFACK,CAACI,CAAA,CAAAkB,CAAA,EAAYiE,KAAA,CAAOxE,CAAA,EAAetB,CAAA,IAE5CQ,OAAA,CAAQF,IAAA,CAAyB,mBAAAhD,CAAA,EAC5ByC,CAAA,EAA+B,gBAApBgG,YAAY,EAC1BvF,CAAY,CAIP,KACT,EACF,EAGE,CAAgBwI,CAAA,EAEZuB,CAAA,CAAmD,QAAAC,CACvDjK,CAAA,CACAI,CAAA,EAGA,MAC8B,cAA5BJ,CAAA,CAAMc,MAAA,EACe,UAApBV,CAAA,EAAgC,WAARA,CAAA,GACzBJ,CAAA,CAAMI,CAAA,EAMQW,2BAAC,CAAM4E,KAAA,CAAhB5E,sBAAA,CAAiB,CAAAf,CAAA,CAAOI,CAAA,EAAAiE,MAAA,IAAAlH,KAAA,CAAAgN,IAAA,CAAAC,SAAA,MAJtB,IAAA/H,KAAA,CACD,IAAAjC,CAAA,CAAa,KAAAJ,CAAA,CAAMI,CAAA,EAE1B,+CAEH,GAEMiK,CAAA,CAAe,GAAI,CAAA9H,GAAA,CAAI,qCAEhB+H,CAAA,CAAY,CACvB9J,GAAA,CAAKO,6BAAU,CAAO0F,UAAA,CACtBP,GAAA,CDkCuD,QAAAA,CACvDlG,CAAA,CACAI,CAAA,CACAQ,CAAA,EAGA,MAAK,CAAAZ,CAAA,CAAMkG,GAAA,OAAOlG,CAAA,CAAMkG,GAAA,CAMjBnF,2BAAU,CAAA4E,KAAA,CAAV5E,sBAAA,CAAS,CAAQf,CAAA,CAAOI,CAAA,CAAUQ,CAAA,EAC3CyD,MAAA,IAAAlH,KAAA,CAAAgN,IAAA,CAAAC,SAAA,MANW,GAAS,CAAA/H,KAAA,kCACmBzB,CAAA,CAEpC,0JAGH,GC9CEH,KAAA,CAAOuJ,CAAA,CACP/I,MAAA,CAAQ+I,CAAA,CACR9G,KAAA,CAAOnC,6BAAU,CACjBD,MAAA,CAAQ,QAAAA,CAACd,CAAA,EACP,OAAqB,KAAjBA,CAAA,CAAMc,MAAA,GAGNuJ,CAAA,CAAa5H,GAAA,CAAIzC,CAAA,CAAMc,MAAA,EAI3B,UAAgB,CAAAuB,KAAA,kBACGrC,CAAA,CAAMc,MAAA,CAE3B,yHAGF+I,CAAA,CAAYlD,WAAA,CAA2B,cACvCkD,CAAA,CAAYrD,SAAA,CAAY8D,CAAA;;ACtGxB,KAAM,CAAAQ,eAAe,CAAGD,gCAAM,CAACE,GAAG,CAAAC,UAAA,EAAArE,WAAA,8BAAAsE,WAAA,g1CA8HjC,CAIc,QAAS,CAAAC,UAAUA,CAAA,CAAI,CAIpC,KAAM,CAAA9L,IAAI,CAAGH,uCAAc,aA4B1B,CAAC,CAIF,mBACMD,8EAAA,CAAC8L,eAAe,MAKR1L,IAAI,CAAC+L,MAAM,CAACC,KAAK,CAACjN,GAAG,CACpBkN,IAAI,eAEHrM,8EAAA,QAAK4J,SAAS,CAAC,QAAQ,eAGf5J,8EAAA,CAAC4L,yBAAI,EAACU,EAAE,CAAG,cAAaD,IAAI,CAACE,WAAW,CAACC,IAAK,EAAE,eAC9CxM,8EAAA,OAAIuH,GAAG,CAAE8E,IAAI,CAACE,WAAW,CAACpM,KAAM,EAAEkM,IAAI,CAACE,WAAW,CAACpM,KAAU,CACzD,CAAC,cAEPH,8EAAA,QAAK4J,SAAS,CAAC,OAAO,CAAM,CAAC,cAC7B5J,8EAAA,WAAKqM,IAAI,CAACE,WAAW,CAACE,KAAU,CAAC,cAEjCzM,8EAAA,QAAK4J,SAAS,CAAC,SAAS,eAEtB5J,8EAAA,CAAC0J,CAAW,EAACE,SAAS,CAAC,SAAS,CAACrD,KAAK,CAAEV,CAAQ,CAACwG,IAAI,CAACE,WAAW,CAACG,aAAa,CAAE,CAACxF,GAAG,CAAEmF,IAAI,CAACE,WAAW,CAACpM,KAAM,CAAC,CAAC,cAChHH,8EAAA,CAAC0J,CAAW,EAACE,SAAS,CAAC,UAAU,CAACrD,KAAK,CAAEV,CAAQ,CAACwG,IAAI,CAACE,WAAW,CAACI,cAAc,CAAE,CAACzF,GAAG,CAAEmF,IAAI,CAACE,WAAW,CAACpM,KAAM,CAAC,CAAC,cAClHH,8EAAA,CAAC0J,CAAW,EAACE,SAAS,CAAC,UAAU,CAACrD,KAAK,CAAEV,CAAQ,CAACwG,IAAI,CAACE,WAAW,CAACK,cAAc,CAAE,CAAC1F,GAAG,CAAEmF,IAAI,CAACE,WAAW,CAACpM,KAAM,CAAC,CAE9G,CAMJ,CAEV,CAGQ,CAAC,CAE1B,CAQO,KAAM,CAAA0M,IAAI,CAAGA,CAAA,gBAAO7M,8EAAA,CAACE,kBAAG,EAACC,KAAK,CAAC,WAAW,CAAC,CAAC","sources":["webpack://bisabi/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://bisabi/./src/components/Seo.js","webpack://bisabi/../src/image-utils.ts","webpack://bisabi/../src/components/hooks.ts","webpack://bisabi/../src/components/placeholder.tsx","webpack://bisabi/../src/components/picture.tsx","webpack://bisabi/../src/components/main-image.tsx","webpack://bisabi/../src/components/layout-wrapper.tsx","webpack://bisabi/../src/components/gatsby-image.server.tsx","webpack://bisabi/../src/components/static-image.server.tsx","webpack://bisabi/./src/pages/portfolio.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nexport default function Seo ( { title } ) {\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n              }\r\n            }\r\n        }\r\n    `)\r\n    return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n    );\r\n}\r\n\r\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\";\r\nimport { Link, useStaticQuery, graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Seo from '../components/Seo';\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\n\r\nconst PortfolioStyled = styled.div`\r\n    color: hsl(37.7, 100%, 91.6%); \r\n    grid-column: 1/2;\r\n    justify-self: start;\r\n    width: 100%;\r\n    height: 90vh;\r\n    overflow-y: scroll;\r\n    scrollbar-width: thin;\r\n    border-top: 1px solid hsl(37.7, 100%, 91.6%);\r\n    \r\n    .window {\r\n      \r\n      \r\n      border-bottom: 1px solid hsl(37.7, 100%, 91.6%);\r\n      \r\n      padding: 1rem 0 1rem 0;\r\n\r\n      display: grid;\r\n      grid-template-columns: 400px auto auto auto 1fr;\r\n      grid-template-rows: auto;\r\n      grid-gap: 0.3rem;\r\n      justify-content: start;\r\n\r\n    a {   \r\n      grid-column: 1/2;\r\n      grid-row: 1/2;\r\n      margin-top: 0;\r\n      margin-bottom: 0;\r\n      width: fit-content;\r\n      align-self: start;\r\n      height: fit-content;  \r\n      margin-left: 0.7rem;  \r\n      text-decoration: none;\r\n      \r\n\r\n      h1:hover {\r\n          letter-spacing: 0.01rem;\r\n          border-bottom: 3px solid hsl(39, 100%, 64.1%);\r\n        }\r\n\r\n    }\r\n\r\n    h1 {\r\n      margin: 0 0 0 0;\r\n    }\r\n\r\n    .label {\r\n      grid-column: 1/2;\r\n      grid-row: 1/2;\r\n      align-self: center;\r\n      margin-left: 0.7rem;\r\n      margin-right: 2rem;\r\n      margin-bottom: -2px;\r\n      background-color: hsl(39, 100%, 64.1%);\r\n      width: 15px;\r\n      height: 10px;\r\n      clip-path: polygon(100% 0%, 75% 50%, 100% 100%, 0 100%, 0% 50%, 0 0);\r\n    }\r\n\r\n    h5 {\r\n      grid-column: 1/2;\r\n      grid-row: 1/2;\r\n      align-self: center;\r\n      color: hsl(36.9, 33.3%, 69.4%);\r\n      margin-left: 2rem;\r\n      }\r\n\r\n    .gallery {\r\n      \r\n    }\r\n\r\n    .gatsby-image-wrapper {\r\n      margin-right: 2rem;\r\n    }\r\n\r\n   \r\n      \r\n\r\n      \r\n\r\n    }\r\n\r\n    @media (max-width: 850px){ \r\n      .window {\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: auto auto auto; \r\n        \r\n      }\r\n\r\n      a {\r\n        grid-column: 1/2;\r\n        grid-row: 1/2;\r\n    \r\n      }\r\n\r\n      .gallery {\r\n        grid-column: 1/2;\r\n        grid-row: 3/4;\r\n        margin-left: 0.7rem;\r\n        margin-top: 0.5rem;\r\n  \r\n      }\r\n\r\n      .label {\r\n        grid-column: 1/2;\r\n        grid-row: 2/3!important;\r\n      }\r\n\r\n      h5 {\r\n        \r\n      grid-column: 1/2;\r\n      grid-row: 2/3!important;\r\n        \r\n      }  \r\n    }\r\n\r\n    @media (max-width: 500px){ \r\n      \r\n     \r\n\r\n      .featImg3 {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n\r\n`;\r\n\r\n\r\n\r\nexport default function Poortfolio () {\r\n\r\n \r\n\r\n  const data = useStaticQuery(graphql`\r\n    query PoortfolioQuery {\r\n      allMdx {\r\n        nodes {\r\n          frontmatter {\r\n            title\r\n            label\r\n            featuredImage {\r\n              childImageSharp {\r\n                gatsbyImageData(height: 120, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            featuredImage2 {\r\n              childImageSharp {\r\n                gatsbyImageData(height: 120, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            featuredImage3 {\r\n              childImageSharp {\r\n                gatsbyImageData(height: 120, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            slug\r\n          }\r\n        }\r\n      }\r\n  }\r\n    \r\n  `)\r\n\r\n\r\n    \r\n  return (\r\n        <PortfolioStyled>\r\n            \r\n           \r\n            \r\n              {\r\n                data.allMdx.nodes.map\r\n                (node => (\r\n                  \r\n                  <div className=\"window\">\r\n                        \r\n                        \r\n                          <Link to={`/Portfolio/${node.frontmatter.slug}`}>\r\n                            <h1 key={node.frontmatter.title}>{node.frontmatter.title}</h1>\r\n                          </Link> \r\n\r\n                          <div className=\"label\"></div>\r\n                          <h5>{node.frontmatter.label}</h5>\r\n\r\n                          <div className=\"gallery\">\r\n                           \r\n                            <GatsbyImage className=\"featImg\" image={getImage(node.frontmatter.featuredImage)} alt={node.frontmatter.title}/>\r\n                            <GatsbyImage className=\"featImg2\" image={getImage(node.frontmatter.featuredImage2)} alt={node.frontmatter.title}/>\r\n                            <GatsbyImage className=\"featImg3\" image={getImage(node.frontmatter.featuredImage3)} alt={node.frontmatter.title}/>\r\n\r\n                          </div>\r\n                          \r\n                          \r\n                            \r\n                           \r\n                          \r\n                      </div>\r\n                  \r\n                ))\r\n              }\r\n           \r\n        </PortfolioStyled>\r\n  )   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Head = ( ) => <Seo title=\"Portfolio\"/>\r\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","preserveCamelCase","string","toLowerCase","toUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","slice","preserveConsecutiveUppercase","input","lastIndex","replace","m1","postProcess","_","identifier","m","camelCase","options","Array","isArray","TypeError","pascalCase","map","x","trim","filter","join","locale","toLocaleLowerCase","toLocaleUpperCase","hasUpperCase","charAt","module","exports","default","React","useStaticQuery","Seo","title","data","createElement","site","siteMetadata","s","l","u","d","c","h","g","warn","e","console","p","sortNumeric","t","getSizes","f","getSrcSet","src","width","v","lastIndexOf","a","w","layout","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","n","Math","round","y","generateImageSource","filename","format","fit","b","pluginName","reporter","S","N","backgroundColor","placeholderURL","Error","I","Set","size","has","delete","add","W","Object","entries","outputPixelDensities","k","M","sizes","presentationWidth","presentationHeight","unscaledWidth","E","j","sources","R","forEach","Boolean","find","fallback","srcSet","push","type","images","placeholder","dedupeAndSortDensities","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","getImage","gatsbyImageData","gatsbyImage","childImageSharp","getSrc","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","A","O","T","z","_Picture$propTypes","loading","alt","shouldLoad","decoding","L","Picture","key","propTypes","isRequired","bool","displayName","exact","arrayOf","oneOfType","q","C","Placeholder","D","MainImage","Fragment","P","H","NativeScriptLoading","dangerouslySetInnerHTML","__html","F","Sizer","style","paddingTop","maxWidth","display","role","position","B","LayoutWrapper","children","G","V","U","removeNewLines","X","GatsbyImage","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","Y","Z","__imageData","__error","J","checkDimensionProps","number","call","arguments","K","Q","StaticImage","generateImageData","getImageData","getLowResolutionImageURL","withArtDirection","Link","styled","PortfolioStyled","div","withConfig","componentId","Poortfolio","allMdx","nodes","node","to","frontmatter","slug","label","featuredImage","featuredImage2","featuredImage3","Head"],"sourceRoot":""}